@model ITFamily.FrontEnd.Models.RestorePasswordModel

@section Scripts {
    @Scripts.Render("~/Scripts/jqueryval")
}

@using (Ajax.BeginForm("RestorePasswordPartial", "Authorize", null, new AjaxOptions
{
    UpdateTargetId = "restorePassword"
},
new
{
    @id = "restorePassword",
    @class = "form-main"
}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    var success = ViewBag.Success as bool?;
    if (success.HasValue && success.Value)
    {
        <div class="remind-password">
            <div class="header-ps">
                Вам должно прийни на почту собщение со ссылкой для восстановления пароля.
            </div>
        </div>
    }
    else
    {
        <div class="remind-password">
            <div class="header-ps">
                Восстановление пароля!
                Пожалуйса введите свой email
            </div>
            <div class="label">Эл. почта</div>
            @Html.TextBoxFor(x => x.Email, new { @class = "input form-main-input", @placeholder = "минимум 4 символа" })
            @Html.HiddenFor(x => x.TokenHash)
            <div class="error-text">
                @Html.ValidationMessage("OtherError", new { @class = "" })
                <div class="clearfix"></div>
                @Html.ValidationMessageFor(model => model.Email, null, new { @class = "" })
                <div class="clearfix"></div>
            </div>

            <button type="submit" class="button confirm-button">Напомнить</button>
        </div>
    }
    //Пользователя с таким e-mail не существует
}