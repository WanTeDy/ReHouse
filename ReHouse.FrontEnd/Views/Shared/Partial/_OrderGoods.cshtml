@using ITfamily.Utils
@using ITfamily.Utils.DataBase
@using ITfamily.Utils.DataBase.AuxiliaryData
@using ITFamily.FrontEnd.Helpers
@using ITFamily.FrontEnd.Models
@model OrderGoodsModel

@section Scripts {
    @Scripts.Render("~/Scripts/jqueryval")
}

@using (Ajax.BeginForm("OrderGoods", "Cart", null, new AjaxOptions
{
    HttpMethod = "Post",
    UpdateTargetId = "orderGoods",
    OnSuccess = "OrderGoodsFunction"
}, new { @Id = "orderGoods", @class = "form-basket" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    var session = SessionHelpers.Session("user", typeof(SessionModel)) as SessionModel;

    <div class="form-basket-block">
        <div class="row-basket">
            <div class="personal-title">Личные Данные</div>
            <label for="basket-fullname">* Фамилия, Имя, Отчество</label>
            @Html.TextBoxFor(x => x.FIO, new { @class = "input", @placeholder = "ФИО пожалуйcта" })
            @*<input type="text" id="basket-fullname" required minlength="6" placeholder="ФИО пожалуйcта" maxlength="120" name="FIO" class="input">*@
            <label for="basket-telephone">* Мобильный телефон</label>
            @Html.TextBoxFor(x => x.Phone, new { @class = "input", @placeholder = "ваш телефон пожалуйcта" })
            @*<input type="tel" id="basket-telephone" required minlength="8" placeholder="ваш телефон пожалуйcта" maxlength="16" name="Phone" class="input">*@
            <label for="basket-email">Адрес электорнной почты</label>
            @Html.TextBoxFor(x => x.Email, new { @class = "input", @placeholder = "ваш email пожалуйcта" })
            @*<input type="email" id="basket-email" required minlength="3" placeholder="ваш email пожалуйcта" maxlength="60" name="Email" class="input">*@
            <div class="button-add-comment">
                <span class="fa fa-plus"></span>
                Добавить комментарий к заказу
            </div>
            @Html.TextAreaFor(x => x.Comment, new { @class = "input", @style = "height:100px!important;", @placeholder = "ваши дополнительные комментарии пожалуйcта" })
            @*<textarea id="basket-comment" placeholder="ваши дополнительные комментарии пожалуйcта" name="Comment" style="height:100px!important;" class="input"></textarea>*@
        </div>
        <div class="row-basket">
            <div class="payment-title">Оплата</div>
            <label for="select-payment">* Способ оплаты</label>
            <select name="PaymentMetod" class="select-payment" id="select-payment">
                @if (session != null && session.RoleName == ConstV.RolePartner)
                {
                    <option>@ConstV.PaymentMethods[PaymentMethod.CreditLine]</option>
                }
                <option>@ConstV.PaymentMethods[PaymentMethod.PaymentOnDelivery]</option>
                <option>@ConstV.PaymentMethods[PaymentMethod.FullPayment]</option>
            </select>
            <div class="button-add-shipment">
                <span class="fa fa-plus-circle"></span>
                Доставка
            </div>
            <div class="additional-shipment">


                <label for="select-city">Город</label>

                <select class="styler" id="select-city" data-search="true" data-search-limit="4" name="DeliveryCity" style="margin: 0px; padding: 0px; position: absolute; left: 0px; top: 0px; width: 100%; height: 100%; opacity: 0;">
                    @if (ViewBag != null && ViewBag.OrderCities != null)
                    {
                        var ords = ViewBag.OrderCities as List<OrderCities>;
                        if (ords != null && ords.Any())
                        {
                            foreach (var orderCity in ords)
                            {
                                if (orderCity.Name == "Одесса")
                                {
                                    <option selected="selected">@orderCity.Name</option>
                                }
                                else
                                {
                                    <option>@orderCity.Name</option>
                                }

                            }
                        }
                    }
                </select>

                <label for="select-shipment">Способ Доставки</label>
                <select name="DeliveryType" class="select-shipment" id="select-shipment">
                    <option>@ConstV.DeliveryTypes[DeliveryType.SendingNovaPoshta]</option>
                    <option>@ConstV.DeliveryTypes[DeliveryType.PickupFromStock]</option>
                </select>

                <label for="basket-adress">Адресс</label>
                @Html.TextBoxFor(x => x.DeliveryAdress, new { @class = "input", @placeholder = "ваш адресс пожалуйcта" })
                @*<input type="text" id="basket-adress" placeholder="ваш адресс пожалуйcта" name="DeliveryAdress" class="input">*@
            </div>

        </div>
    </div>

    <div class="clearfix"></div>
    <div class="error-text">
        @Html.ValidationMessageFor(x => x.Email, null, new { @class = "" })
        <div class="clearfix"></div>
        @Html.ValidationMessageFor(x => x.FIO, null, new { @class = "" })
        <div class="clearfix"></div>
        @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "" })
        <div class="clearfix"></div>
        @Html.ValidationMessage("Error", new { @class = "" })
        <div class="clearfix"></div>
    </div>
    <div class="button-folder">
        <button class="button buy" type="submit">Оформить заказ</button>
    </div>
}
